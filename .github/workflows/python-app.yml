# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "*" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pip-tools
        python -m piptools compile -o requirements.txt pyproject.toml
        if [ -f requirements.txt ]; then pip install . -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      env:
        PPMI_LOGIN: ${{ secrets.PPMI_USER }}
        PPMI_PASSWORD: ${{ secrets.PPMI_PASSWORD }}
      run: |
        pytest -v
    - uses: eWaterCycle/setup-singularity@v7
      with:
        singularity-version: 3.8.3
    - name: Test for Selenium-Grid with pytest 
      env:
        PPMI_LOGIN: ${{ secrets.PPMI_USER }}
        PPMI_PASSWORD: ${{ secrets.PPMI_PASSWORD }}
        PPMI_SINGULARITY_BUILD_VERBOSE: True
        PPMI_SINGULARITY_RUN_VERBOSE: True
      run: |
        build_selenium
        run_selenium &
        GRID_PID=$!
        sleep 60
        pytest -v --remote=hostname
        kill -9 ${GRID_PID}
